#!/bin/bash
# Raspberry Pi Wireless Hotspot Installation Script

clear

echo "======================================================="
echo "======== Setting up Raspberry Pi WiFi hotspot ========="
echo "======================================================="

read -r -p "This script will make changes to your system which may break some applications and may require you to reimage your SD card. Are you sure that you wish to continue? [y/N] " confirm

if [[ $confirm =~ ^([yY][eE][sS]|[yY])$ ]]
then
    clear
    echo "Updating package lists (This may take a while)"
    
    apt-get -y -qq update
    
    echo "Installing dependencies"
    
    apt-get -y -qq install hostapd udhcpd
    
        
    ####################################################################
    #	check for and back up existing config files
    #################################################################### 
    
    echo "Backing up existing config files"
    
    if [ -f /etc/udhcpd.conf ]
    then
        cp /etc/udhcpd.conf /etc/udhcpd.conf.old 
    fi
    
    if [ -f /etc/default/udhcpd ]
    then
        cp /etc/default/udhcpd /etc/default/udhcpd.old
    fi
    
    if [ -f /etc/network/interfaces ]
    then
        cp /etc/network/interfaces /etc/network/interfaces.old
    fi
    
    if [ -f /etc/hostapd/hostapd.conf ]
    then
        cp /etc/hostapd/hostapd.conf /etc/hostapd/hostapd.conf.old
    fi
    
    if [ -f /etc/default/hostapd ]
    then
        cp /etc/default/hostapd /etc/default/hostapd.old
    fi
    
    if [ -f /etc/sysctl.conf ]
    then
        cp /etc/sysctl.conf /etc/sysctl.conf.old
    fi
    
    
    if [ -f /etc/iptables.ipv4.nat ]
    then
        cp /etc/iptables.ipv4.nat /etc/iptables.ipv4.nat.old
    fi
    
    
    echo "Config Files backed up"
    
    ####################################################################
    #	copy configs to relevant directories
    ####################################################################
    
    echo "Configuring DHCP"
    read -r -p "Do you wish to use alternative DNS servers? [y/N] " altdnsresponse

    if [[ $altdnsresponse =~ ^([yY][eE][sS]|[yY])$ ]]
    then
        echo "The DNS servers that can be configured are:"
        echo "  Unblock-Us"
        echo "  OpenDNS"
        echo "  Google"
        echo "If you do not select a DNS service, your network's default DNS server will selected."
        
        read -r -p "Do you wish to use Unblock-Us DNS servers? [y/N] " unblockusdnsresponse
        if [[ $unblockusdnsresponse =~ ^([yY][eE][sS]|[yY])$ ]]
        then
            cp ./config-files/udhcpd_unblockus.conf /etc/udhcpd.conf
            cp ./config-files/udhcpd /etc/default
        else
            read -r -p "Do you wish to use OpenDNS DNS servers? [y/N] " opendnsresponse
            if [[ $opendnsresponse =~ ^([yY][eE][sS]|[yY])$ ]]
            then
                cp ./config-files/udhcpd_opendns.conf /etc/udhcpd.conf
                cp ./config-files/udhcpd /etc/default
            else
                read -r -p "Do you wish to use Google DNS servers? [y/N] " googlednsresponse
                if [[ $googlednsresponse =~ ^([yY][eE][sS]|[yY])$ ]]
                then
                    cp ./config-files/udhcpd_google.conf /etc/udhcpd.conf
                    cp ./config-files/udhcpd /etc/default
                else
                    echo "No other DNS servers available to choose from. Reverting to your network's default."
                    cp ./config-files/udhcpd.conf /etc
                    cp ./config-files/udhcpd /etc/default
                fi
            fi
        fi
    else
        cp ./config-files/udhcpd.conf /etc
        cp ./config-files/udhcpd /etc/default
    fi
    
    echo "Configuring interfaces"
    cp ./config-files/interfaces /etc/network
    
    echo "Configuring hostapd"
    cp ./config-files/hostapd.conf /etc/hostapd
    cp ./config-files/hostapd /etc/default
    

    #############################################################
    #   option for adafruit wifi adapter or any rtl871x adapter
    #############################################################

    read -r -p "Are you using an rtl871x chipset (such as one purchased via adafruit? (if in doubt, select no) [y/N] " adafruit

    if [[ $adafruit =~ ^([yY][eE][sS]|[yY])$ ]]
    then
        mv /usr/sbin/hostapd /usr/sbin/hostapd.ORIG
        echo "Adafruit hostapd binary copied"
        cp ./hostapd-adafruit /usr/sbin/hostapd
        cp ./config-files/hostapd-adafruit.conf /etc/hostapd/hostapd.conf
        chmod 755 /usr/sbin/hostapd
    fi


    echo "Configuring NAT"
    cp ./config-files/sysctl.conf /etc
    
    echo "Configuring iptables"
    read -r -p "Do you require Chromecast support for unblock-us? [y/N] " chromecastresponse
    if [[ $chromecastresponse =~ ^([yY][eE][sS]|[yY])$ ]]
    then
        cp ./config-files/iptables_chromecast.ipv4.nat /etc/iptables.ipv4.nat
    else
        cp ./config-files/iptables.ipv4.nat /etc
    fi
    
    touch /var/lib/misc/udhcpd.leases
    
    echo "Initialising access point"
    service hostapd start
    update-rc.d hostapd enable
    
    echo "Initialising DHCP server"
    service udhcpd start
    update-rc.d udhcpd enable
    
       
    echo "================================================================"
    echo "=================== Configuration complete! ===================="
    echo "================================================================"
    
    echo "+++++++++++++++++  REBOOTING in 10 SECONDS  ++++++++++++++++++++"
    echo "++++++++++++++++++++++ CTL-C to cancel ++++++++++++++++++++++++"
    
    sleep 10
    reboot
    
    exit 0

#else
 #   exit 1
    
fi
