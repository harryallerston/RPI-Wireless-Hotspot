#!/bin/bash
# Raspberry Pi Wireless Hotspot Installation Script

clear

echo "======================================================="
echo "======== Setting up Raspberry Pi WiFi hotspot ========="
echo "======================================================="

read -r -p "This script will make changes to your system which may break some applications and may require you to reimage your SD card. Are you sure that you wish to continue? [y/N] " confirm

if ! [[ $confirm =~ ^([yY][eE][sS]|[yY])$ ]]
then
	exit 1
fi

clear
echo "Updating package lists"

apt-get -y -qq update

echo "Installing dependencies"

apt-get -y -qq install hostapd udhcpd


####################################################################
# check for and back up existing config files
####################################################################
echo "Backing up existing config files"

readonly CONFIG_FILES=(/etc/udhcpd.conf
	/etc/default/udhcpd
	/etc/network/interfaces
	/etc/hostapd/hostapd.conf
	/etc/default/hostapd
	/etc/sysctl.conf
	/etc/iptables.ipv4.nat)

for c in ${CONFIG_FILES[*]};
do
	if [ -f ${c} ]
	then
		cp -i ${c} ${c}.old
	fi
done

echo "Config Files backed up"

####################################################################
# copy configs to relevant directories
####################################################################

echo "Configuring DHCP"
read -r -p "Do you want to use preconfigured DNS servers? [y/N] " altdnsresponse

if [[ $altdnsresponse =~ ^([yY][eE][sS]|[yY])$ ]]
then
	read -r -p "Do you wish to use Unblock-Us DNS servers? [y/N] " unblockusdnsresponse
	if [[ $unblockusdnsresponse =~ ^([yY][eE][sS]|[yY])$ ]]
	then
		cp ./config-files/udhcpd_unblockus.conf /etc/udhcpd.conf
	else
		read -r -p "Do you wish to use OpenDNS DNS servers? [y/N] " opendnsresponse
		if [[ $opendnsresponse =~ ^([yY][eE][sS]|[yY])$ ]]
		then
			cp ./config-files/udhcpd_opendns.conf /etc/udhcpd.conf
		else
			echo "No other DNS servers available to choose from. Reverting to Google DNS."
			cp ./config-files/udhcpd_google.conf /etc/udhcpd.conf
		fi
	fi
else
	read -r -p "Please enter a custom dns server address of the form xxx.xxx.xxx.xxx : " _DNS
	read -r -p "Please enter a custom router number from 0-254 : " _ROUTER
	sed -e "s/ROUTER/${_ROUTER}/g" -e "s/DNS/${_DNS}/" ./config-files/udhcpd_template.conf > /etc/udhcpd.conf
	sed -e "s/ROUTER/${_ROUTER}/g" -e "s/DNS/${_DNS}/" ./config-files/udhcpd_template.conf > /etc/udhcpd.conf
fi
# Copy in the config file to enable udhcpd
cp ./config-files/udhcpd /etc/default
# Copy in the systemd udhcpd.service file
cp ./config-files/udhcpd.service /lib/systemd/system/
# Tell systemd to enable the udhcpd.service
systemctl enable udhcpd.service

echo "Configuring interfaces"
if [ -n "${_ROUTER}" ]; then
	sed -e "s/ROUTER/${_ROUTER}/g" ./config-files/interfaces-template > /etc/network/interfaces
else
	cp ./config-files/interfaces /etc/network
fi

echo "Configuring hostapd"
readonly DEFAULTPWD="0123456789A"
readonly DEFAULTSSID="RaspberryPiFi"
readonly DEFAULTCHANNEL=8

read -r -p "Do you want to use the wifi defaults of password=${DEFAULTPWD}, ssid=${DEFAULTSSID}, and channel=${DEFAULTCHANNEL}? [y/N] " althostapdresponse

if [[ $althostapdresponse =~ ^([yY][eE][sS]|[yY])$ ]]
then
	cp ./config-files/hostapd.conf /etc/hostapd
else
	_PASSWORD1="0"
	_PASSWORD2="1"
	read -r -s -p "Please enter a new password at least 8 characters long (length is not checked): " _PASSWORD1
	echo
	read -r -s -p "Please enter the new password again: " _PASSWORD2
	echo
	while [ ${_PASSWORD1} != ${_PASSWORD2} ]
	do
		echo "Password mismatch please try again."
		read -r -s -p "Please enter a new password at least 8 characters long (length is not checked): " _PASSWORD1
		echo
		read -r -s -p "Please enter the new password again: " _PASSWORD2
		echo
	done
	read -r -p "Please enter a new ssid: " _SSID
	# Sentry for the channel selection
	_SENTRY="0"
	while [ ${_SENTRY} != "1" ]
	do
		read -r -p "Please enter a new channel from 1 to 11: " _CHANNEL
		if [ ${_CHANNEL} == ${_CHANNEL//[^0-9]/} ] && [ ${_CHANNEL} -lt 12 ]  && [ ${_CHANNEL} -gt 0 ]
		then
			echo "You selected channel $_CHANNEL."
			_SENTRY="1"
		else
			echo "Invalid entry received of ${_CHANNEL} ."
		fi
	done
	CONTENTS=$(<./config-files/hostapd.conf)
	CONTENTS=${CONTENTS//wpa_passphrase=${DEFAULTPWD}/wpa_passphrase=${_PASSWORD1}}
	CONTENTS=${CONTENTS//ssid=${DEFAULTSSID}/ssid=${_SSID}}
	CONTENTS=${CONTENTS//channel=${DEFAULTCHANNEL}/channel=${_CHANNEL}}
	echo "${CONTENTS}" > /etc/hostapd/hostapd.conf
fi
cp ./config-files/hostapd /etc/default


#############################################################
#   option for adafruit wifi adapter or any rtl871x adapter
#############################################################

read -r -p "Are you using an rtl871x chipset (such as one purchased via adafruit? (if in doubt, select no) [y/N] " adafruit

if [[ $adafruit =~ ^([yY][eE][sS]|[yY])$ ]]
then
	mv /usr/sbin/hostapd /usr/sbin/hostapd.ORIG
	echo "Adafruit hostapd binary copied"
	cp ./hostapd-adafruit /usr/sbin/hostapd
	cp ./config-files/hostapd-adafruit.conf /etc/hostapd/hostapd.conf
	chmod 755 /usr/sbin/hostapd
fi


echo "Configuring NAT"
cp ./config-files/sysctl.conf /etc

echo "Configuring iptables"
read -r -p "Do you require chromecast support for unblock-us? [y/N] " chromecastresponse
if [[ $chromecastresponse =~ ^([yY][eE][sS]|[yY])$ ]]
then
	cp ./config-files/iptables-chromecast /etc/iptables.ipv4.nat
else
	cp ./config-files/iptables.ipv4.nat /etc
fi

touch /var/lib/misc/udhcpd.leases

echo "Initialising access point"
service hostapd start
update-rc.d hostapd enable

echo "Initialising DHCP server"
service udhcpd start
update-rc.d udhcpd enable


echo "================================================================"
echo "=================== Configuration complete! ===================="
echo "================================================================"

echo "+++++++++++++++++  REBOOTING in 10 SECONDS  ++++++++++++++++++++"
echo "++++++++++++++++++++++ CTL-C to cancel ++++++++++++++++++++++++"

sleep 10
reboot

exit 0

